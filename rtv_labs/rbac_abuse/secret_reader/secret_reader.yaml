apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-reader-sa
  namespace: default

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: secret-reader-role
rules:
- apiGroups: [""] # "" indicates core API group
  resources: ["secrets"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-secrets-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: secret-reader-sa # Name of the ServiceAccount
  namespace: default
roleRef:
  kind: Role #this must be Role or ClusterRole
  name: secret-reader-role # Name of the Role
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: Secret
metadata:
  name: api-key-secret
  namespace: default
stringData:
  api-key: "a1b2c3d4e5f6g7h8i9j0"

---
apiVersion: v1
kind: Secret
metadata:
  name: database-credentials
  namespace: default
stringData:
  username: "testuser123"
  password: "P@$$wOrd123!"

---
apiVersion: v1
kind: Secret
metadata:
  name: ssh-key-secret
  namespace: default
type: kubernetes.io/ssh-auth
stringData:
  ssh-privatekey: "-----BEGIN RSA PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKcwggSlAgEAAoIBAQC/....FAKE_RSA_PRIVATE_KEY_DATA....\n-----END RSA PRIVATE KEY-----"
  ssh-publickey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC/....FAKE_RSA_PUBLIC_KEY_DATA.... user@example.com"

---
apiVersion: v1
kind: Pod
metadata:
  name: secrets-reader 
  namespace: default
spec:
  serviceAccountName: secret-reader-sa
  containers:
  - name: my-container
    image: ubuntu:latest
    command: ["sh", "-c", "while true; do sleep 3600; done"] # Keep the pod running

